package org.unir.tfm;

import java.sql.SQLException;

import org.apache.log4j.Logger;
import org.serest4j.annotation.db.TMDataSource;
import org.serest4j.annotation.db.TMNoDataSource;
import org.serest4j.annotation.rest.TMRest;
import org.serest4j.annotation.service.TMInjectableContext;
import org.serest4j.annotation.service.TMNoWaitResponse;
import org.serest4j.db.InsertBuilder;
import org.serest4j.db.TMTransactionalLogger;
import org.unir.tfm.dao.TrazaTorneo;

@TMDataSource("jdbc/IanseoDest")
@TMNoDataSource
@TMInjectableContext
public class DataWriter implements IDataWriter {

	TMTransactionalLogger tl;
	Logger debug;

	@TMRest
	@TMNoWaitResponse
	public void saveTrazas(TrazaTorneo[] trazaTorneos) {
		InsertBuilder ib = new InsertBuilder("traza_torneo");
		ib.setPretty(true);
		for (TrazaTorneo tt : trazaTorneos) {
			ib.append("CodigoTorneo", tt.getCodigoTorneo());
			ib.append("NombreTorneo", tt.getNombreTorneo());
			ib.appendDate("Fecha", tt.getFecha());
			ib.append("NombreParticipante", tt.getNombreParticipante());
			ib.append("NombreClub", tt.getNombreClub());
			ib.appendInt("PuntosEntrada1", tt.getPuntosEntrada1());
			ib.appendInt("DiezEntrada1", tt.getDiezEntrada1());
			ib.appendInt("xEntrada1", tt.getxEntrada1());
			ib.appendInt("PuntosEntrada2", tt.getPuntosEntrada2());
			ib.appendInt("DiezEntrada2", tt.getDiezEntrada2());
			ib.appendInt("xEntrada2", tt.getxEntrada2());
			ib.addBatch();
		}
		try {
			int i = ib.executeBatch(tl);
			debug.info("Generadas " + i + " nuevas trazas");
		} catch (SQLException e) {
			debug.error("Error en consulta saveTrazas ", e);
		}
	}
}
