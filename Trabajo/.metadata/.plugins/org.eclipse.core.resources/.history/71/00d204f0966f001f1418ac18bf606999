package org.unir.tfm;

import java.util.Date;

import org.apache.log4j.Logger;
import org.serest4j.annotation.db.TMDataSource;
import org.serest4j.annotation.db.TMNoDataSource;
import org.serest4j.annotation.rest.TMRest;
import org.serest4j.annotation.service.TMInjectableContext;
import org.serest4j.annotation.service.TMNoWaitResponse;
import org.serest4j.db.InsertBuilder;
import org.serest4j.db.TMTransactionalLogger;
import org.unir.tfm.dao.TrazaTorneo;

@TMDataSource("jdbc/IanseoDest")
@TMNoDataSource
@TMInjectableContext
public class DataWriter implements IDataWriter {

	TMTransactionalLogger tl;
	Logger debug;

	@TMRest
	@TMNoWaitResponse
	public void saveTrazas(TrazaTorneo[] tt) {
		long l = System.currentTimeMillis() + 60000;
		long espera = 30000;
		do {
			debug.debug("Esperando " + espera + " msegs hasta " + new Date(l) );
			try {
				Thread.sleep(espera);
			} catch (InterruptedException e) {}
			espera = l - System.currentTimeMillis();
		}
		while(System.currentTimeMillis() < l);
		debug.debug("Escribo " + tt[0].getIdTraza() + " - " + tt[tt.length - 1].getIdTraza());
	}
	
	static void writeTrazas(TrazaTorneo[] trazaTorneos, TMTransactionalLogger tl) {
		InsertBuilder ib = new InsertBuilder("traza_torneo");
		ib.setPretty(true);
		int i = 0;
		for (TrazaTorneo tt : trazaTorneos) {
			ib.append("CodigoTorneo", tt.getCodigoTorneo());
			ib.append("NombreTorneo", tt.getNombreTorneo());
			ib.appendDate("Fecha", tt.getFecha());
			ib.append("NombreParticipante", tt.getNombreParticipante());
			ib.append("NombreClub", tt.getNombreClub());
			ib.appendInt("PuntosEntrada1", tt.getPuntosEntrada1());
			ib.appendInt("DiezEntrada1", tt.getDiezEntrada1());
			ib.appendInt("xEntrada1", tt.getxEntrada1());
			ib.appendInt("PuntosEntrada2", tt.getPuntosEntrada2());
			ib.appendInt("DiezEntrada2", tt.getDiezEntrada2());
			ib.appendInt("xEntrada2", tt.getxEntrada2());
			ib.addBatch();
			i++;
			if (i == 100) {
				System.err.println(ib.toString());
				ib = new InsertBuilder("traza_torneo");
				ib.setPretty(true);
				i = 0;
			}
		}
		System.err.println(ib.toString());
	}

	
}
